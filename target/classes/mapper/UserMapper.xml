<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace属性：用于指定当前的映射文件和那个接口进行映射，需要指定接口的文件路径，需要完整路径-->
<mapper namespace="com.cy.store.mapper.UserMapper">
    <!--自定义映射规则：resultMap标签来完成映射规则的定义
        id属性：标签给这个映射负责分配一个唯一的id值，对应的就是resultMap="id属性的值" 属性的取值
        type属性：取值是一个类，表示数据库中的查询结果与Java中哪个实体类进行结果集的映射-->
    <resultMap id="UserEntityMap" type="com.cy.store.entity.User" >
        <!--将表的资源和类的属性不一致的字段进行匹配，名称一致的字段可以省略不写
            column属性：表示表中的属性名称  property属性：表示类中的属性名称
            在定义映射规则时，主键不可省略-->
        <result column="uid" property="uid"/>
        <result column="is_delete" property="isDelete"/>
        <result column="created_user" property="createdUser"/>
        <result column="created_time" property="createdTime"/>
        <result column="modified_user" property="modifiedUser"/>
        <result column="modified_time" property="modifiedTime"/>
    </resultMap>

    <!--id属性：表示映射的接口中方法名-->
    <!--useGeneratedKeys：开启某个字段的值只增，一般为主键自增
        keyProperty：指定主键字段名(将哪个字段作为主键进行递增)-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
    INSERT INTO t_user (
        username, password, salt, phone, email, gender, avatar,
        is_delete, created_user, created_time, modified_user, modified_time)
    VALUES (
    /*VALUES里面名字要和entity一样*/
    #{username}, #{password}, #{salt}, #{phone}, #{email}, #{gender},#{avatar},
    #{isDelete}, #{createdUser}, #{createdTime}, #{modifiedUser}, #{modifiedTime}
      )
    </insert>

    <!--select在执行的时候查询的结果：一个对象或多个对象-->
    <!--resultType：表示查询的结果类型，需要指定对应映射类的类型，
                  并且包含完整包接口：resultType ="com.cy.store.entity.User"
      resultMap：当表的字段和实体类的属性名不一致时，可以使用resultMap进行映射-->
    <select id="findByUsername" resultMap="UserEntityMap">
        SELECT * FROM t_user WHERE username = #{username}
    </select>

    <!--根据用户的uid来修改密码-->
    <update id="updatePasswordByUid">
        UPDATE t_user
        SET password=#{password},
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        WHERE uid=#{uid}
    </update>

    <!--根据用户uid来查询用户的数据findByUid-->
    <select id="findByUid" resultMap="UserEntityMap">
        SELECT * FROM t_user WHERE uid = #{uid}
    </select>

    <!--根据用户uid来修改用户信息-->
    <update id="updateInfoByUid">
        UPDATE t_user
        SET
            <!--if表示条件判断，test属性接受的是一个返回值为boolean类型的条件，
            如果test条件的结果为真就执行if内部的语句-->
            <if test="phone!=null">phone=#{phone},</if>
            <if test="email!=null">email=#{email},</if>
            <if test="gender!=null">gender=#{gender},</if>
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        WHERE uid=#{uid}
    </update>



</mapper>